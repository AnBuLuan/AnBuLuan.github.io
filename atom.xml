<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>anbulang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yonc.gitee.io/"/>
  <updated>2020-07-13T12:20:10.130Z</updated>
  <id>https://yonc.gitee.io/</id>
  
  <author>
    <name>anbulang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图片</title>
    <link href="https://yonc.gitee.io/post/undefined.html"/>
    <id>https://yonc.gitee.io/post/undefined.html</id>
    <published>2020-07-03T04:59:13.000Z</published>
    <updated>2020-07-13T12:20:10.130Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a href="https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/donate.jpg" target="_blank" rel="noopener" data-fancybox="images" data-caption="sakura"><img src="https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/donate.jpg"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="图片" scheme="https://yonc.gitee.io/categories/%E5%9B%BE%E7%89%87/"/>
    
    
      <category term="相册" scheme="https://yonc.gitee.io/tags/%E7%9B%B8%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>okHttp3的使用</title>
    <link href="https://yonc.gitee.io/post/376.html"/>
    <id>https://yonc.gitee.io/post/376.html</id>
    <published>2020-06-29T08:56:00.000Z</published>
    <updated>2020-07-13T12:19:55.798Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="okHttp3的使用"><a href="#okHttp3的使用" class="headerlink" title="okHttp3的使用"></a>okHttp3的使用</h2><p><a href="https://anbuluan.github.io//" target="_blank" rel="noopener">OkHttp</a>是由鼎鼎大名的Square公司开发的，这个公司在开源事业上面贡献良多，除了OkHttp之<br>外，还开发了像Picasso、Retrofit等著名的开源项目。OkHttp不仅在接口封装上面做得简单易<br>用，就连在底层实现上也是自成一派，比起原生的HttpURLConnection，可以说是有过之而无不<br>及，现在已经成了广大Android开发者首选的网络通信库。</p><a id="more"></a><h3 id="一-创建OkHttpClient的实例"><a href="#一-创建OkHttpClient的实例" class="headerlink" title="(一)创建OkHttpClient的实例"></a>(一)创建OkHttpClient的实例</h3><pre><code class="cpp">   OkHttpClient client = new OkHttpClient();</code></pre><h3 id="二-创建一个Request-对象"><a href="#二-创建一个Request-对象" class="headerlink" title="(二)创建一个Request 对象"></a>(二)创建一个Request 对象</h3><pre><code class="cpp">   Request request = new Request.Builder()    .url("http://www.baidu.com")    .build();</code></pre><h3 id="三-获取服务器返回的数据"><a href="#三-获取服务器返回的数据" class="headerlink" title="(三)获取服务器返回的数据"></a>(三)获取服务器返回的数据</h3><pre><code>调用OkHttpClient的newCall() 方法来创建一个Call 对象，并调用它的execute() 方法</code></pre><p>来发送请求并获取服务器返回的数据</p><pre><code class="cpp">   Response response = client.newCall(request).execute();   String responseData = response.body().string();</code></pre><h3 id="四-发起一条POST请求"><a href="#四-发起一条POST请求" class="headerlink" title="(四)发起一条POST请求"></a>(四)发起一条POST请求</h3><pre><code>需要先构建出一个Request</code></pre><p>Body 对象来存放待提交的参数</p><pre><code class="cpp">     RequestBody requestBody = new FormBody.Builder()    .add("username", "admin")    .add("password", "123456")    .build();     Request request = new Request.Builder()    .url("http://www.baidu.com")    .post(requestBody)    .build();    Response response = client.newCall(request).execute();</code></pre><h3 id="发送Get请求获取百度数据"><a href="#发送Get请求获取百度数据" class="headerlink" title="发送Get请求获取百度数据"></a>发送Get请求获取百度数据</h3><pre><code class="cpp">    try {        OkHttpClient client = new OkHttpClient();        Request request = new Request.Builder()        .url("http://www.baidu.com")        .build();        Response response = client.newCall(request).execute();        String responseData = response.body().string();        showResponse(responseData);        } catch (Exception e) {            e.printStackTrace();        }</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;okHttp3的使用&quot;&gt;&lt;a href=&quot;#okHttp3的使用&quot; class=&quot;headerlink&quot; title=&quot;okHttp3的使用&quot;&gt;&lt;/a&gt;okHttp3的使用&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://anbuluan.github.io//&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OkHttp&lt;/a&gt;是由鼎鼎大名的Square公司开发的，这个公司在开源事业上面贡献良多，除了OkHttp之&lt;br&gt;外，还开发了像Picasso、Retrofit等著名的开源项目。OkHttp不仅在接口封装上面做得简单易&lt;br&gt;用，就连在底层实现上也是自成一派，比起原生的HttpURLConnection，可以说是有过之而无不&lt;br&gt;及，现在已经成了广大Android开发者首选的网络通信库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://yonc.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="知识" scheme="https://yonc.gitee.io/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yonc.gitee.io/post/3eeb.html"/>
    <id>https://yonc.gitee.io/post/3eeb.html</id>
    <published>2020-06-27T07:10:09.000Z</published>
    <updated>2020-07-14T10:07:14.774Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>欢迎来到 <a href="https://anbulang.top" target="_blank" rel="noopener">anbulang安的blog</a>! 这是我的第一篇文章。. 如果你对我感兴趣，可以关注我哦。</p><h2 id="Android系统架构"><a href="#Android系统架构" class="headerlink" title="Android系统架构"></a>Android系统架构</h2><h3 id="Linux内核层"><a href="#Linux内核层" class="headerlink" title="Linux内核层"></a>Linux内核层</h3><pre><code class="cpp">    Android系统是基于Linux内核的，这一层为Android设备的各种硬件提供了底层的驱动，如显示驱动、音频驱动、照相机驱动、蓝牙驱动、Wi-Fi驱动、电源管理等。</code></pre><p>More info: <a href="">Writing</a></p><h3 id="系统运行库层"><a href="#系统运行库层" class="headerlink" title="系统运行库层"></a>系统运行库层</h3><pre><code class="cpp">    这一层通过一些C/C++库来为Android系统提供了主要的特性支持。如SQLite库提供了数据库的支持，OpenGL|ES库提供了3D绘图的支持，Webkit库提供了浏览器内核的支持等。</code></pre><p>More info: <a href="">Server</a></p><h3 id="应用框架层"><a href="#应用框架层" class="headerlink" title="应用框架层"></a>应用框架层</h3><pre><code class="bash">  这一层主要提供了构建应用程序时可能用到的各种API，Android自带的一些核心应用就是使用这些API完成的，开发者也可以通过使用这些API来构建自己的应用程序。</code></pre><p>More info: <a href="">Generating</a></p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><pre><code class="cpp">    所有安装在手机上的应用程序都是属于这一层的，比如系统自带的联系人、短信等程序，或者是你从Google Play上下载的小游戏，当然还包括你自己开发的程序。</code></pre><pre><code class="cpp">name: 名称url:  地址img:  头像desc: 描述</code></pre><p>More info: <a href="">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="技术" scheme="https://yonc.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="知识" scheme="https://yonc.gitee.io/tags/%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
</feed>
